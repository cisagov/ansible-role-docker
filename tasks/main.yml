---
- name: Load setup tasks file for adding the official Docker PPA to Debian
  ansible.builtin.include_tasks:
    file: setup_Debian.yml
  when:
    - ansible_os_family == "Debian"
    # The docker-ce PPA does not yet support Debian Bookworm
    # (identified as version NA)
    - not (ansible_distribution == "Debian" and (ansible_distribution_release == "bookworm" or ansible_distribution_release == "NA"))
    # By extension, it does not yet support Kali either.
    - ansible_distribution != "Kali"

- name: Load setup tasks file for adding the official Docker repo to Fedora
  ansible.builtin.include_tasks:
    file: setup_Fedora.yml
  when:
    - ansible_distribution == "Fedora"

- name: Load var file with package names based on the OS type
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: >
    Install Docker, Docker Compose, and the Docker Python library
  ansible.builtin.package:
    name: "{{ package_names }}"

# Amazon Linux 2023 does not (yet?) offer docker-compose or the
# Docker Compose plugin, so we grab it from GitHub:
# https://github.com/amazonlinux/amazon-linux-2023/issues/186
- name: Install Docker Compose V2 plugin (Amazon Linux)
  ansible.builtin.include_tasks:
    file: compose_Amazon.yml
  when:
    - ansible_distribution == "Amazon"

# Unless you do this, systemd can sometimes get confused when you try
# to start a service you just installed
- name: Systemd daemon-reload
  ansible.builtin.systemd:
    daemon_reload: true
  when: ansible_service_mgr == "systemd"

- name: Enable docker
  ansible.builtin.service:
    name: docker
    enabled: yes
