---
# tasks file for docker

- name: Load setup tasks file for adding the official Docker PPA to Debian
  include: setup_Debian.yml
  when:
    - ansible_os_family == "Debian"
    # The docker-ce PPA does not yet support Debian Bullseye
    # (identified as version NA)
    - ansible_distribution != "Debian" or ansible_distribution_version != "NA"

- name: Load setup tasks file for adding the official Docker package repo to RedHat
  include: setup_RedHat.yml
  when:
    - ansible_os_family == "RedHat"

- name: Load var file with package names based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        # Add regex_replace() filters to remove spaces and
        # slashes. This allows the OS family/distribution for Kali,
        # "Kali GNU/Linux", to be easily mapped to a vars file.
        - "{{ ansible_distribution | regex_replace('[ /]', '_') }}_{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution | regex_replace('[ /]', '_') }}.yml"
        - "{{ ansible_os_family | regex_replace('[ /]', '_') }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Install docker
  package:
    name: "{{ package_names }}"

# Unless you do this, systemd can sometimes get confused when you try
# to start a service you just installed
- name: Systemd daemon-reload
  systemd:
    daemon_reload: true
  when: ansible_service_mgr == "systemd"

- name: Enable docker
  service:
    name: docker
    enabled: yes

# The docker python library is needed when using the Ansible modules
# docker_image, docker_compose, etc.
- name: Install docker-compose and the docker python library
  pip:
    executable: pip3
    name:
      - docker[tls]
      - docker-compose
