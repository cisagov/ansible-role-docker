---
# tasks file for docker

- name: Load setup tasks file for Debian, if necessary
  include: setup_Debian.yml
  when:
    - ansible_distribution == "Debian"
    - ansible_distribution_version == "9" or ansible_distribution_version == "10"

- name: Load var file with package names based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        # The OS family and distribution for Kali is "Kali GNU/Linux",
        # which is not an allowable file name in Linux due to the
        # slash.  We will allow Kali to fall through and use the
        # Debian vars file.
        - Debian.yml
      paths:
        - vars

- name: Install docker
  package:
    name: "{{ package_names }}"

# Unless you do this, systemd can sometimes get confused when you try
# to start a service you just installed
- name: Systemd daemon-reload
  systemd:
    daemon_reload: true
  when: ansible_service_mgr == "systemd"

- name: Enable docker
  service:
    name: docker
    enabled: yes
    state: started

- name: Install docker-compose
  pip:
    name:
      - docker-compose

# This is needed when using the Ansible modules docker_image,
# docker_compose, etc.
- name: Install docker python library
  pip:
    name:
      - docker[tls]
